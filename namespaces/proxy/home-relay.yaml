---

relays:
  - hostname: books.g4v.dev
    backend:
      ip: 100.87.25.75
      port: 443
      hostname: calibre-web.nas.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/auth-signin: "https://vouch.g4v.dev/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err"
      nginx.ingress.kubernetes.io/auth-url: https://vouch.g4v.dev
      nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/auth-snippet: |
        if ( $request_uri ~ ^/kobo/.* ) {
          return 200;
        }
        if ( $request_uri ~ ^/download/[0-9]+/kepub ) {
          return 200;
        }
        # these return values are used by the @error401 call
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
  - hostname: home.g4v.dev
    backend:
      ip: 100.73.87.77
      port: 8123
      scheme: http
      hostname: home.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  - hostname: dev.g4v.dev
    backend:
      ip: 100.118.24.15
      port: 3000
      scheme: http
      hostname: dev.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  - hostname: unifi.g4v.dev
    backend:
      ip: 100.117.184.6
      port: 443
      scheme: https
      hostname: unifi.pc.g4v.dev
    additionalPaths:
      - path: /outpost.goauthentik.io
        pathType: Prefix
        backend:
          service:
            name: ak-outpost-unifi
            port:
              name: http
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/auth-url: "http://ak-outpost-unifi.proxy.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx"
      nginx.ingress.kubernetes.io/auth-signin: "https://unifi.g4v.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri"
      nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid"
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
  - hostname: overseerr.g4v.dev
    backend:
      ip: 100.117.184.6
      port: 443
      scheme: https
      hostname: overseerr.pc.g4v.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
  - hostname: sonarr.g4v.dev
    backend:
      ip: 100.87.25.75
      port: 443
      scheme: https
      hostname: sonarr.nas.g4v.dev
    additionalPaths:
      - path: /outpost.goauthentik.io
        pathType: Prefix
        backend:
          service:
            name: ak-outpost-sonarr
            port:
              name: http
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/auth-url: "http://ak-outpost-sonarr.proxy.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx"
      nginx.ingress.kubernetes.io/auth-signin: "https://sonarr.g4v.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri"
      nginx.ingress.kubernetes.io/auth-response-headers: "Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid"
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
