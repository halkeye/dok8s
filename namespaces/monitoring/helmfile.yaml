repositories:
  - name: sstarcher
    url: https://shanestarcher.com/helm-charts/
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx

releases:
  - name: g4v-prometheus-certificate
    chart: halkeye/certificate
    version: 0.0.4
    namespace: monitoring
    values:
      - issuerRef:
          kind: ClusterIssuer
          name: letsencrypt
        dnsNames:
          - 'prometheus.g4v.dev'
          - 'alertmanager.g4v.dev'
        commonName: 'prometheus.g4v.dev'
        secretName: g4v-prometheus-certificate-tls
  - name: prometheus-ingress
    namespace: monitoring
    chart: ingress-nginx/ingress-nginx
    version: 4.5.2
    values:
      - controller:
          config:
            use-forwarded-headers: "true"
          service:
            type: ClusterIP
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "10254"
              tailscale.com/expose: "true"
              tailscale.com/hostname: "prometheus-ingress"
          extraArgs:
            default-ssl-certificate: "monitoring/g4v-prometheus-certificate-tls"
          ingressClassResource:
            # -- Name of the ingressClass
            name: prometheus
            # -- Is this ingressClass enabled or not
            enabled: true
  - name: prometheus
    chart: prometheus-community/prometheus
    version: 19.7.2
    namespace: monitoring
    values:
      - prometheus.yaml
    secrets:
      - prometheus-secrets.yaml
  - name: helm-exporter
    chart: sstarcher/helm-exporter
    version: 1.2.5+1cbc9c5
    namespace: monitoring
  - name: grafana
    chart: grafana/grafana
    namespace: monitoring
    version: 6.52.1
    values:
      - grafana.yaml
    secrets:
      - grafana-secrets.yaml
