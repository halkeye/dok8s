ingress:
  enabled: true
  tls:
    - secretName: synapse-tls
      hosts:
        - matrix.g4v.dev
  hosts:
    - host: matrix.g4v.dev
      paths:
        - /
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "180"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "180"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"

cacheFactor: 5.0

podAnnotations:
  prometheus.io/path: /_synapse/metrics
  prometheus.io/port: "9000"
  prometheus.io/scrape: "true"

probes:
  liveness:
    failureThreshold: 15
    periodSeconds: 30
  readiness:
    failureThreshold: 15
    periodSeconds: 30

extra_python_modules:
  - https://github.com/t2bot/synapse-simple-antispam/archive/refs/heads/master.zip#egg=synapse-simple-antispam
  - https://github.com/devture/matrix-synapse-shared-secret-auth/archive/refs/tags/2.0.2.zip
  - https://github.com/matrix-org/synapse-s3-storage-provider/archive/refs/heads/main.zip

homeserver:
  server_name: "g4v.dev"
  signing_key_path: "/data/signing.key"
  admin_contact: "mailto:matrix@g4v.dev"
  enable_registration: false
  public_baseurl: https://matrix.g4v.dev/
  app_service_config_files:
    - /config/whatsapp-registration.yaml
    - /config/whatsapp-doublepuppet.yaml
    - /config/telegram-registration.yaml
    - /config/googlechat-registration.yaml
    - /config/googlechat-doublepuppet.yaml
    - /config/signal-registration.yaml
    - /config/mautrix-gmessages.yaml
    - /config/mautrix-gmessages-doublepuppet.yaml
    - /config/mautrix-linkedin.yaml
    - /config/mautrix-instagram.yaml
    - /config/mautrix-instagram-doublepuppet.yaml
  enable_group_creation: true
  enable_3pid_lookup: true
  #default_identity_server: https://matrix-identity.g4v.dev
  trusted_third_party_id_servers:
    - matrix.g4v.dev
  #account_threepid_delegates:
  #  email: https://matrix-identity.g4v.dev
  #  msisdn: https://matrix-identity.g4v.dev
  email:
    enable_notifs: false
    notif_from: "Your Friendly %(app)s homeserver <noreply@g4v.dev>"
    client_base_url: "http://chat.g4v.dev"
  enable_media_repo: true
  # Directory where uploaded images and attachments are stored.
  media_store_path: "/data/media_store"

  # The largest allowed upload size in bytes
  max_upload_size: 1000M

  # Maximum number of pixels that will be thumbnailed
  max_image_pixels: 32M

  url_preview_enabled: true

  url_preview_ip_range_blacklist:
    - "127.0.0.0/8"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
    - "100.64.0.0/10"
    - "169.254.0.0/16"
    - "::1/128"
    - "fe80::/64"
    - "fc00::/7"

  url_preview_url_blacklist:
    # blacklist any URL with a username in its URI
    - username: "*"
    # blacklist all *.google.com URLs
    - netloc: "google.com"
    - netloc: "*.google.com"
    # blacklist all plain HTTP URLs
    - scheme: "http"
    # blacklist http(s)://www.acme.com/foo
    - netloc: "www.acme.com"
      path: "/foo"
    # blacklist any URL with a literal IPv4 address
    - netloc: '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'

  password_config:
    enabled: false
  sso:
    client_whitelist:
      - https://chat.g4v.dev
      - https://chat2.g4v.dev
      - https://g4v.dev

  redis:
    enabled: true
    host:  synapse-redis-master.matrix.svc.cluster.local
federation_worker:
  redis:
    enabled: true
    host:  synapse-redis-master.matrix.svc.cluster.local
federation_sender:
  redis:
    enabled: true
    host:  synapse-redis-master.matrix.svc.cluster.local

logconfig:
  root:
    level: INFO
    handlers: [console]
  loggers:
    shared_secret_authenticator:
      level: INFO
    synapse.access.http.8008:
      level: ERROR
    synapse.federation.transport.server:
      level: ERROR
    synapse.metrics:
      level: ERROR
    synapse.handlers.oidc:
      level: DEBUG

#dnsConfig:
#  options:
#    - name: ndots
#      value: "1"

extraConfigs:
  whatsapp-registration.yaml:
    id: whatsapp
    url: http://mautrix-whatsapp.matrix.svc.cluster.local:29318
    sender_localpart: whatsappbot
    rate_limited: false
    namespaces:
      users:
        - regex: ^@whatsapp_[0-9]+:g4v.dev$
          exclusive: true
  whatsapp-doublepuppet.yaml:
    id: whatsapp-doublepuppet
    url:
    # not actually used
    sender_localpart: FePgh8IgCtl1SPkDJwDHahjdcDr5arWtzZ5f7w0vshCQhxEji4edR0YG64Cd8SUX
    rate_limited: false
    namespaces:
      users:
        - regex: '@.*:g4v\.dev'
          exclusive: false
  telegram-registration.yaml:
    id: telegram
    namespaces:
      users:
        - exclusive: true
          regex: "@telegram_.+:g4v.dev"
      aliases:
        - exclusive: true
          regex: "#telegram_.+:g4v.dev"
    url: http://mautrix-telegram.matrix.svc.cluster.local:29317
    sender_localpart: telegrambot
    rate_limited: false
  googlechat-registration.yaml:
    id: googlechatbot
    namespaces:
      users:
        - exclusive: true
          regex: "@googlechat_.+:g4v.dev"
          group_id: +googlechat:g4v.dev
    url: http://mautrix-googlechat:29320
    sender_localpart: googlechatbot
    rate_limited: false
  googlechat-doublepuppet.yaml:
    id: googlechatbot-doublepuppet
    # The URL is intentionally left empty (null), as the homeserver shouldn't
    # push events anywhere for this extra appservice. If you use a
    # non-spec-compliant server, you may need to put some fake URL here.
    url:
    # Generate random strings for these three fields. Only the as_token really
    # matters, hs_token is never used because there's no url, and the default
    # user (sender_localpart) is never used either.
    sender_localpart: EYXftK8gu5HukwIgCrb69R3xhtsjilEMcMgqFjsvl91L6CHMBeA0cA8m5ODhhpBC
    # Bridges don't like ratelimiting. This should only apply when using the
    # as_token, normal user tokens will still be ratelimited.
    rate_limited: false
    namespaces:
      users:
      # Replace your\.domain with your server name (escape dots for regex)
      - regex: '@.*:g4v\.dev'
        # This must be false so the appservice doesn't take over all users completely.
        exclusive: false

  signal-registration.yaml:
    id: signal
    namespaces:
      users:
        - exclusive: true
          regex: "@signal_.+:g4v.dev"
          group_id: +signal:g4v.dev
    url: http://mautrix-signal:29328
    sender_localpart: signalbot
    rate_limited: false
  mautrix-gmessages.yaml:
    url: http://mautrix-gmessages.matrix.svc.cluster.local.:29336
    sender_localpart: 01X9cfMqwFl8Zrfh01Y2L4yqNLCtZGFG
    id: gmessages
    rate_limited: false
    namespaces:
        users:
            - regex: ^@gmessagesbot:g4v\.dev$
              exclusive: true
            - regex: ^@gmessages_.*:g4v\.dev$
              exclusive: true
    de.sorunome.msc2409.push_ephemeral: true
    push_ephemeral: true
  mautrix-linkedin.yaml:
    url: http://mautrix-linkedin.matrix.svc.cluster.local.:29336
    id: linkedin
    rate_limited: false
    namespaces:
      aliases: []
      users:
          - regex: ^@linkedinbot:g4v\.dev$
            exclusive: true
          - regex: ^@linkedin_.*:g4v\.dev$
            exclusive: true
  mautrix-gmessages-doublepuppet.yaml:
    id: mautrix-gmessages-doublepuppet
    # The URL is intentionally left empty (null), as the homeserver shouldn't
    # push events anywhere for this extra appservice. If you use a
    # non-spec-compliant server, you may need to put some fake URL here.
    url:
    # Generate random strings for these three fields. Only the as_token really
    # matters, hs_token is never used because there's no url, and the default
    # user (sender_localpart) is never used either.
    sender_localpart: 167r6wr81kEl7mOaqYRImjPxKL7M14ZrWAylfY8W9vQb6Z9G9kfG6c53LDU13oqp
    # Bridges don't like ratelimiting. This should only apply when using the
    # as_token, normal user tokens will still be ratelimited.
    rate_limited: false
    namespaces:
      users:
      # Replace your\.domain with your server name (escape dots for regex)
      - regex: '@.*:g4v\.dev'
        # This must be false so the appservice doesn't take over all users completely.
        exclusive: false
  mautrix-instagram.yaml:
    url: http://mautrix-instagram.matrix.svc.cluster.local.:29336
    sender_localpart: 01X9cfMqwFl8Zrfh01Y2L4yqNLCtZGFG
    id: instagram
    rate_limited: false
    namespaces:
        users:
            - regex: ^@instagrambot:g4v\.dev$
              exclusive: true
            - regex: ^@instagram_.*:g4v\.dev$
              exclusive: true
    de.sorunome.msc2409.push_ephemeral: true
    push_ephemeral: true
  mautrix-instagram-doublepuppet.yaml:
    id: mautrix-instagram-doublepuppet
    # The URL is intentionally left empty (null), as the homeserver shouldn't
    # push events anywhere for this extra appservice. If you use a
    # non-spec-compliant server, you may need to put some fake URL here.
    url:
    # Generate random strings for these three fields. Only the as_token really
    # matters, hs_token is never used because there's no url, and the default
    # user (sender_localpart) is never used either.
    sender_localpart: UUtZjPSUkXQEPuuYRoP2iPzx7SefOTbJv3sJLMKBec40qPRUhyH5MRkJLOArQhDp
    # Bridges don't like ratelimiting. This should only apply when using the
    # as_token, normal user tokens will still be ratelimited.
    rate_limited: false
    namespaces:
      users:
      # Replace your\.domain with your server name (escape dots for regex)
      - regex: '@.*:g4v\.dev'
        # This must be false so the appservice doesn't take over all users completely.
        exclusive: false

persistence:
  enabled: false
  size: 10Gi

redis:
  enabled: true
  # password is in secret
